/*Find longest Palindromic sub string in a given string:

 input -> babassa
 output -> assa
 
 
 */
 
 
#include<bits/stdc++.h>
using namespace std;

bool isPalindrome(string s)
{
	int size = s.length();
	int m=0;
	bool isPal=true;
	while(m<size)
	{
		if(s[m]==s[size-1-m])
		{
			m++;
		}
		else
		{
			isPal=false;
			m++;
		}
	}
	if(isPal){
		return true;
	}
	else{
		return false;
	}
}

int main()
{
	string str;
	cout << "Enter String:" << endl;
	cin >> str;
	int max_len=0;
	string ans="";
	for(int i=0;i<str.length();i++)
	{
		char hol = i;
		int j=i+1;
		while(j<str.length())
		{
			if(str[j] == str[i])
			{
				int dis = j+1-hol;
				string sub = str.substr(hol,dis);
				if(isPalindrome(sub))
				{
					if(sub.length()>max_len)
					{
						max_len = sub.length();
						ans = sub;
					}
				} 
				j++;
			}
			else
			{
				j++;
			}
		}
		
	}	
	
   cout << "The biggest palindromic Substring is:" << endl;
   cout << ans << endl;
	
	
	
}