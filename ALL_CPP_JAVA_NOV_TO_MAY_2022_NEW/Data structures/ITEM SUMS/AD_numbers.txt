Mr Febin is working with numbers.
He wants to find all the AD Numbers,
An AD Number is defined as follows:
	- All the adjacent digits in the given number N 
	should have an absolute difference of 1 only. 

You will be given two integers, start and end,
Your task is to find all the AD Numbers in ascending order
in the range of [start, end], where both are inclusive.

Constarint:
----------
0 <= start < end <2*10^9.

Input Format:
-------------
Two space separated intergers,  start and end.

Output Format:
--------------
Print a list of integers.


Sample Input-1:
---------------
0 15

Sample Output-1:
----------------
0 1 2 3 4 5 6 7 8 9 10 12


Sample Input-2:
---------------
25 65

Sample Output-2:
----------------
32 34 43 45 54 56 65

#include<bits/stdc++.h>
using namespace std;
bool isad(string k)
{
    for(int i=0;i<k.length()-1;i++)
    {
        if(abs((int)(k[i]-'0')-(int)(k[i+1]-'0'))!=1)
        {
            return false;
        }
    }
  return true;
}
int main()
{
    int lb,ub;
    
    cin>>lb;
    cin>>ub;
    
    for(int i=lb;i<=ub;i++)
    {
        string temp = to_string(i);
        if(isad(temp))
        {
            cout<<temp<<" ";
        }
    }
}
