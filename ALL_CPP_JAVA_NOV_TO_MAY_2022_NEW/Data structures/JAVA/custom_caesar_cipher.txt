/*
The Caesar cipher is a type of substitution cipher in which each alphabet in the
plaintext or messages is shifted by a number of places down the alphabet.

For example,with a shift of 1, P would be replaced by Q, Q would become R, and 
so on.

To pass an encrypted message from one person to another, it is first necessary
that both parties have the ‘Key’ for the cipher, so that the sender may 
encrypt and the receiver may decrypt it.
Key is the number of OFFSET to shift the cipher alphabet. 

Key can have basic shifts from 1 to 25 positions as there are 26 total alphabets.
As we are designing custom Caesar Cipher, in addition to alphabets, 

we are considering numeric digits from 0 to 9. 
Digits can also be shifted by key places.
For Example, if a given plain text contains any digit with values 5 and keyy =2, 
then 5 will be replaced by 7, “-”(minus sign) will remain as it is. 
Key value less than 0 should result into “INVALID INPUT”

Example 1:
case=1
input=All the best
1
output=Bmm uif cftu

Write a function CustomCaesarCipher(int key, String message) which will 
accept plaintext and key as input parameters and returns its cipher text as output.

*/

import java.util.*;
public class Main
{
    public void cipher(int key, String message)
    {
        StringBuilder sb= new StringBuilder("");
        int res=0;
        int asci=0;
        int bot=0;
        char c=' ';
        for(int i=0;i<message.length();i++)
        {
            if(message.charAt(i)==' ')
            {
               sb.append(' ');
            }
            else if(message.charAt(i)=='-')
            {
                sb.append('-');
            }
            else{
                asci = (int)message.charAt(i);
                c=' ';
                if(asci>=65 && asci<=90)
                {
                   asci+=key;
                   res=asci+key;
                   if(asci>90)
                   {
                       asci=65 +(res-90);
                   }
                   c=(char)asci;
                   
                   sb.append(c);
                    
                }
                else if(asci>=97 && asci<=122)
                {
                    asci+=key;
                    res=asci+key;
                    if(asci>122)
                    {
                        asci=97+(res-122);
                    }
                    c=(char)asci;
                    sb.append(c);
                    
                }
                else if(asci>=48 && asci<=57)
                {
                    asci+=key;
                    res=asci+key;
                    if(asci>57){
                        asci=48+(res-57);
                    }
                    c=(char)asci;
                    sb.append(c);
                }
                
                
            }
        }
        System.out.println(sb);
    }
    
    public static void main(String[] args)
    {
        String str;
        Main m=new Main();
        int keyval=0;
        Scanner sc =new Scanner(System.in);
        str=sc.nextLine();
        keyval=sc.nextInt();
        m.cipher(keyval,str);
    }
    
}