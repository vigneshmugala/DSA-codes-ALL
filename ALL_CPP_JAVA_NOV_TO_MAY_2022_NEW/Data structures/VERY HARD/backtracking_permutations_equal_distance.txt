/*
input - n
no.of.elements - 2n
every element 1-n appears twice and distance between it's two appearances equal to the value of the element itslef
Find all such combinations

ex: 3
3 1 2 1 3 2
2 3 1 2 1 3
*/
#include<bits/stdc++.h>
using namespace std;

void combinations(vector<int>vec,int e, int n)
{
	int size=2*n;
	for(int i=0;i<size;i++)
	{
		if(vec[i]==-1&&vec[i+e+1]==-1&&(i+e+1)<size)
		{
			vec[i]=e;
			vec[i+e+1]=e;
			combinations(vec,e+1,n);
			vec[i]=-1;
			vec[i+e+1]=-1;
		}
	}
	
	if(e>n)
	{
		for(auto x:vec)
		{
			cout<<x<<" ";
		}
		cout<<endl;
		return;
	}	
}
void creator(int n)
{
	vector<int>v;
	for(int i=0;i<2*n;i++)
	{
		v.push_back(-1);
	}
	int ele=1;
	combinations(v,ele,n);
}
int main()
{
  int n;
  cout<<"Enter n value:"<<endl;
  cin>>n;
  cout<<"Resulting combinations are:"<<endl;
  creator(n);
}