/*Convert Integer to Roman Number
1- I       54- LIV     3999 - MMMCMXCIX(Highest Roman number)
4- IV      90- XC      
5- V       100- C         Constarints( 1 - 3,999)
6- VI      134 - CXXXIV
9- IX      149 - CXLIX
10- X      150- CL
14- XIV    400 -CD
16- XVI    500 - D
40- XL     900- CM
50- L      1000 -M
*/
#include<bits/stdc++.h>
using namespace std;
string getRoman(int n,int pv)
{
	string r="";
	if(pv==1)
	{
	   if(n<4)
	   {
	   	  for(int i=0;i<n;i++)
	   	  {
	   	  	r+="I";
		  }
	   }	
	   else if(n==4)
	   {
	   	  r=+"IV";
	   }
	   else if(n>4&&n<9)
	   {
	   	 r+="V";
	   	 for(int i=5;i<n;i++){
	   	 	r+="I";
	 	}
	   }
	   else{
	   	r+="IX";
	   }	
	}
	else if(pv==2)
	{
	  if(n<4)
	   {
	   	  for(int i=0;i<n;i++)
	   	  {
	   	  	r+="X";
		  }
	   }	
	   else if(n==4)
	   {
	   	  r=+"XL";
	   }
	   else if(n>4&&n<9)
	   {
	   	 r+="L";
	   	 for(int i=5;i<n;i++){
	   	 	r+="X";
	 	}
	   }
	   else{
	   	r+="LC";
	   }		
	}
	else if(pv==3)
	{
	   if(n<4)
	   {
	   	  for(int i=0;i<n;i++)
	   	  {
	   	  	r+="C";
		  }
	   }	
	   else if(n==4)
	   {
	   	  r=+"CD";
	   }
	   else if(n>4&&n<9)
	   {
	   	 r+="D";
	   	 for(int i=5;i<n;i++){
	   	 	r+="C";
	 	}
	   }
	   else{
	   	r+="CM";
	   }		
	}
	else
	{
	   if(n<4)
	   {
	   	 for(int i=0;i<n;i++)
	   	 {
	   	 	r+="M";
			}
	   }
	}
	
  return r;
}
int main()
{
	int num;
	cout<<"Enter number:"<<endl;
	cin>>num;
	string roman="";//actual ans
	int digits=0;
	int k=num;
	//get temporary buffer array
	while(k>0)
	{
		digits++;
		k/=10;
	}
	string arr[digits];
	//iterate through each digit of number
	int j=0;
	string temp="";
	int rem=0;
	int count=1;
	while(num>0)
	{
		rem=num%10;
		temp=getRoman(rem,count);
		arr[j]=temp;
		j++;
		count++;
		num/=10;
	}
	 //print in reverse order
	 for(int i=digits-1;i>=0;i--)
	 {
	 	cout<<arr[i];
	 }
	 
}