/*There is an array of priorities that range from 1 to 99. The priorities should be reassigned such that the element which has the maximum priority should be minimized keeping the relative priorities with other elements the same

Sample Test Case 1
Input
1 4 8 4
Output
1 2 3 2

Sample Test Case 2
Input
1 3 7 3
Output
1 2 3 2*/

#include<bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	cout<<"Enter size of array:"<<endl;
	cin>>n;
	
	int arr[n]; int arr2[n];
	cout<<"Enter priorities :"<<endl;
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
		arr2[i] = arr[i];
	}
	
	sort(arr,arr+n);
	
	set<int>st;
	for(int i=0;i<n;i++)
       st.insert(arr[i]);
    
    map<int,int> mp;
    
    int num = 1;
    for(auto g:st)
    {
    	mp[g] = num++;
	}
	
	for(int i=0;i<n;i++)
	{
		int key = arr2[i];
		for(auto g:mp)
		{
			if(g.first == key)
			{
				arr2[i] = g.second;
			}
		}
	}
	
	cout<<"Final priorities after editing are: -->"<<endl;
	
	for(auto f:arr2) cout<<f<<" ";
    
}