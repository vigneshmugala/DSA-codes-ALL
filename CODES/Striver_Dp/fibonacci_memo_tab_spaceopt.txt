/* Fibonacci Series Program 
  Method 1: Memoization
*/

#include<bits/stdc++.h>
using namespace std;

int fibo(int n, vector<int> &dp)
{
    if(n == 0) return 0;
	
	else if(n == 1) return 1;
	
	if(dp[n] != -1) return dp[n];
	
	return dp[n] = fibo(n-1 , dp) + fibo(n-2, dp);	
	
	
}
int main()
{
	int n;
	cin>>n;
	
	vector<int> dp(n+1, -1);
	
	cout<< fibo(n, dp) <<endl;
}

//-----------------------------------------------------------------
/*Fibonacci series Program using Bottom-up Tabulation Construction Method*/

#include<bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	cin>>n;
	
	vector<int> dp(n+1);
	
	dp[0] = 0;
	dp[1] = 1;
	
	for(int i=2;i<=n;i++)
	{
		dp[i] = dp[i-1] + dp[i-2];
	}
	
	cout<<dp[n]<<endl;
}

//-------------------------------------------------------------------------

/*Fibonacci Series Program using Space optimization O(1) space 3 variables*/

#include<bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	cin>>n;
	
	int prev2 = 0;
	int prev1 = 1;
	
	for(int i=2;i<=n;i++)
	{
		int curi = prev1 + prev2;
		prev2 = prev1;
		prev1 = curi;
	}
	
	cout<<prev1<<endl;
}


