Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]
Explanation: 
Window position                Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7



class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        
        int j = 0;
        int maxVal = INT_MIN;
        
        int ptr = 0;
        for(int i=ptr;i<nums.size();i++)
        {
            if(j<k)
            {
                maxVal = max(maxVal,nums[i]);
                cout<<"Current I Value is: "<<i<<endl;
                j++;
            }
            else
            {
                ans.push_back(maxVal);
                maxVal = INT_MIN;
                cout<<"I here is: "<<i<<endl;
                j=0;
                
                i=ptr;
                ptr++;
            }
        }
        ans.push_back(maxVal);
        return ans;
    }
};