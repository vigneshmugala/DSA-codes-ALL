#include<bits/stdc++.h>
using namespace std;

bool search(int i, int j, int r, int c, int ptr, string &word, vector<vector<char>> &grid)
{
	if(ptr>=word.size())
	{
		return true;
	}
	
	if(i<0||j<0||i==r||j==c||grid[i][j]!=word[ptr])
	{
		return false;
	}
	char ch = grid[i][j];
	grid[i][j]='#';
	
	bool op1 = search(i+1,j,r,c,ptr+1,word,grid);
	bool op2 = search(i-1,j,r,c,ptr+1,word,grid);
	bool op3 = search(i,j+1,r,c,ptr+1,word,grid);
	bool op4 = search(i,j-1,r,c,ptr+1,word,grid);
	
	grid[i][j]=ch;
	return (op1||op2||op3||op4);
}


int main()
{
	int r,c;
	cin>>r;
	cin>>c;
	
	vector<vector<char>> grid;
	vector<char> temp;
	
	for(int i=0;i<r;i++)
	{
		for(int j=0;j<c;j++)
		{
			char in;
			cin>>in;
			temp.push_back(in);
		}
	  grid.push_back(temp);
	  temp.clear();
	}
	
	string word;
	cin>>word;
	
	bool ansFound = false;
	for(int i=0;i<r;i++)
	{
		for(int j=0;j<c;j++)
		{
			if(grid[i][j]==word[0])
			{
				if(search(i,j,r,c,0,word,grid))
				{
					ansFound=true;
					break;
				}
			}
		}
	}
	if(ansFound)cout<<"TRUE"<<endl;
	else cout<<"FALSE"<<endl;
}