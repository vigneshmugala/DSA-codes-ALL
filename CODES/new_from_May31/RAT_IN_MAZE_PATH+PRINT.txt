/* RAT IN A MAZE PROBLEM BUT OUTPUT THE ENTIRE PATH 
 D - DOWN
 U - UP
 R - RIGHT
 L - LEFT
*/
#include<bits/stdc++.h>
using namespace std;

void RatEscapePath(int i,int j, int r, int c, string &path, vector<vector<int>> &maze, vector<string> &ans)
{
   if(i==r-1 && j==c-1)
   {
       ans.push_back(path);
       return;
   }
   if(i<0||j<0||i==r||j==c||maze[i][j]==0)
   {
       return;
   }
   
   maze[i][j]=0;
   
   path.push_back('D');
   RatEscapePath(i+1,j,r,c,path,maze,ans);
   path.pop_back();
   
   path.push_back('L');
   RatEscapePath(i,j-1,r,c,path,maze,ans);
   path.pop_back();
   
   path.push_back('R');
   RatEscapePath(i,j+1,r,c,path,maze,ans);
   path.pop_back();
   
   path.push_back('U');
   RatEscapePath(i-1,j,r,c,path,maze,ans);
   path.pop_back();
   
   maze[i][j]=1;
    
}


int main()
{
    int r,c;
	cout<<"Enter maze dimesions:  ";
	cin>>r;
	cin>>c;
	
	vector<vector<int>> maze;
	vector<int> temp;
	
	cout<<"Enter maze elements(0,1)"<<endl;
	for(int i=0;i<r;i++)
	{
		for(int j=0;j<c;j++)
		{
			int in;
			cin>>in;
			temp.push_back(in);
		}
		maze.push_back(temp);
		temp.clear();
	}
	
	cout<<"Starting position of Mouse:(x,y)  "<<endl;
	int x,y;
	cin>>x;
	cin>>y;
	
	string path="";
	vector<string>ans;
	RatEscapePath(x,y,r,c,path,maze,ans);
	
	for(string p: ans)
	{
	    cout<<p<<'\n';
	}
}