class Solution {
public:
    bool pal(string &s)
    {
        string t=s;
        reverse(t.begin(),t.end());
        return (s==t);
    }
    void divide(string s, vector<string> temp, vector<vector<string>> &ans)
    {
        if(s.length() <=0 )
        {
            ans.push_back(temp);
            temp.clear();
            return;
        }
        for(int i=0; i<s.length(); i++)
        {
            string toAdd = s.substr(0,i+1);
            string sub = s.substr(i+1,s.length()-i+1);
            cout<<toAdd<<"------"<<sub<<endl;
            if(pal(toAdd))
            {
                cout<<"pushed " << toAdd <<endl;;
                temp.push_back(toAdd);
                divide(sub,temp,ans);
                temp.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> temp;
        divide(s,temp,ans);
        return ans;
    }
};