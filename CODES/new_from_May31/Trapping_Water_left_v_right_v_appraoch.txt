
// lmax : we are creating vector lmax to store max value of leftmost height.
// Similarly, we create rmax to store max value of rightmost height.
// Trapped water @ particular block is calculated as :
// (max water level above that block) - (height of that block)
// sum of trapped water gives us final answer.


class Solution {
public:
    int trap(vector<int>& height) {
        
        int n = height.size();
        
        vector<int> l(n);
        vector<int> r(n);
        vector<int> t(n);
        
        int ans = 0;
        l[0]=height[0];
        
        for(int i=1;i<n;i++)
        {
            l[i] = max(l[i-1],height[i]);
        }
        r[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--)
        {
            r[i] = max(r[i+1],height[i]);
        }
        
        for(int i=0;i<n;i++)
        {
            t[i] = min(l[i],r[i])-height[i];
        }
        
        for(int i=0;i<n;i++) ans+=t[i];
        
        return ans;
    }
};