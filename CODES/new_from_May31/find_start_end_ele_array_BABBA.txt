/*
Given an array of numbers print the starting index and ending index of the given element
Note: elements are in sorted order
      print -1 -1 if the element is not found.
      implement algorith with O(log n) runtime complexity.

example:
input =6
5 7 7 8 8 10
8
output =3 4
8 is at 3rd index started  and ended at 4th index 


input =8
1 2 4 4 4 4 6 7 
output =2 5

input =8
1 2 4 4 4 4 6 7
8
output =-1 -1
*/
import java.util.*;
public class Test
{
    public static void main(String[] args)
    {
        int n;
        Scanner sc = new Scanner(System.in);
        n=sc.nextInt();
        int arr[] = new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        int find;
        find = sc.nextInt();
        int start = -1;
        int end = -1;
        for(int i=0;i<n;i++)
        {
            if(arr[i] == find && start == -1)
            {
                start = i;
                end=i;
            }
            else if(arr[i] == find && start != -1)
            {
                end = i;
            }
        }
        System.out.println(start+" "+end);
    }
}