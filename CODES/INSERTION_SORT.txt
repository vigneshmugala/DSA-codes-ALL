#include<bits/stdc++.h>
using namespace std;

void insertionSort(int arr[], int n)
{
	int key,j;
	
	for(int i=1;i<n;i++) //assume arr[0] is sorted subarray and start iterating from i=1 to n-1;
	{
		key=arr[i]; // assign current value to compare with "key"
		j=i-1; // j value denotes predecessor for current element(first predecessor to compare)
		
		while(j>=0 && arr[j]>key) //compare every predecessor to left of key till we find appropriate position to place key condition is to find element which is greater than key value so that we can place key value the position before that element(sorted)
		{
			arr[j+1]=arr[j]; //move all greater elements to right side;
			j--; //move left further 
		}
		arr[j+1]=key; //if we've exited the loop that means we've found the suitable position to place the key element, as j=i-1, so place key at arr[j+1]
    } //end
}

int main()
{
	int n;
	cout<<"Enter size of the array: "<<endl;
	cin>>n;
	
	int arr[n];
	cout<<"Enter elements of the array: "<<endl;
	for(int i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	cout<<"After sorting with Insertion sort: "<<endl;
	insertionSort(arr,n);
	for(int i=0;i<n;i++)
	{
		cout<<arr[i]<<" ";
	}
}                                                  